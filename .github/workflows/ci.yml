name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - run: |
          python -m pytest || echo "No tests found"
      - run: |
          python -m pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check required secrets
        run: |
          for s in SERVER_HOST SERVER_USER SERVER_PATH SERVER_SSH_KEY; do
            [ -n "${{ secrets[$s] }}" ] || { echo "❌ Missing $s"; exit 1; }
          done
          echo "✅ Secrets OK"

      - name: SSH setup (key + host pinning)
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          echo "$SERVER_SSH_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$SERVER_HOST" >> ~/.ssh/known_hosts

      - name: Sync project to server (safe rsync)
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}
        run: |
          RSYNC_SSH="ssh -o BatchMode=yes -i ~/.ssh/id_rsa"
          ssh -o BatchMode=yes -i ~/.ssh/id_rsa "$SERVER_USER@$SERVER_HOST" "mkdir -p '$SERVER_PATH'"
          rsync -avz \
            --omit-dir-times --no-perms --no-owner --no-group \
            --exclude ".github/" \
            --exclude "venv/" \
            --exclude "__pycache__/" --exclude "*.pyc" \
            --exclude ".env" \
            --exclude ".ssh/" \
            --exclude "*.log" \
            --exclude "gunicorn.log" \
            ./ -e "$RSYNC_SSH" "$SERVER_USER@$SERVER_HOST:$SERVER_PATH/"

      - name: Install deps & restart service
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}
          APP_SERVICE: securityplus
        run: |
          ssh -o BatchMode=yes -i ~/.ssh/id_rsa "$SERVER_USER@$SERVER_HOST" "set -e && cd '$SERVER_PATH' && if [ -d venv ]; then . venv/bin/activate; fi && python3 -m pip install --upgrade pip && [ -f requirements.txt ] && pip install -r requirements.txt || true && sudo systemctl restart $APP_SERVICE && sudo systemctl is-active --quiet $APP_SERVICE && echo '✅ Deployed and service running' || { sudo journalctl -u $APP_SERVICE --no-pager -n 50; exit 1; }"