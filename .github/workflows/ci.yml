name: CI/CD Pipeline

# When to run this workflow
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Jobs to run
jobs:
  test:
    # Run on Ubuntu
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout your code
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # Step 4: Run tests (optional - add if you have tests)
    - name: Run tests
      run: |
        python -m pytest || echo "No tests found"
    
    # Step 5: Check code style (optional)
    - name: Check code style
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || echo "Code style check completed"

  deploy:
    # Only run if tests pass and we're on main branch
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "ðŸš€ Deploying to production..."
        
        # Install SSH key for server access
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        # Add server to known hosts
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
        # Deploy to your server
        echo "ðŸ“¦ Uploading files to server..."
        rsync -avz --delete ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}/
        
        echo "ðŸ”„ Restarting application on server..."
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          cd ${{ secrets.SERVER_PATH }}
          pip install -r requirements.txt
          sudo systemctl restart security-plus-app
          sudo systemctl status security-plus-app
        EOF
        
        echo "âœ… Deployment completed successfully!"
